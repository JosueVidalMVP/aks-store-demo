name: Deploy Azure Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'infra/terraform/**'
  workflow_dispatch:  # Permite execução manual

permissions:
  contents: read
  id-token: write

env:
  RESOURCE_GROUP_NAME: workshop
  LOCATION: eastus
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Debug Info
        run: |
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Event Name: ${{ github.event_name }}"
          echo "GitHub Environment: ${{ github.event.deployment.environment }}"
          
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
          audience: api://AzureADTokenExchange

      - name: Create Resource Group
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.LOCATION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init
        working-directory: ./infra/terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ env.RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ secrets.TERRAFORM_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=workshop.tfstate"

      - name: Terraform Format
        working-directory: ./infra/terraform
        run: terraform fmt -check

      - name: Terraform Plan
        working-directory: ./infra/terraform
        run: |
          terraform plan \
            -var="resource_group_name=${{ env.RESOURCE_GROUP_NAME }}" \
            -var="location=${{ env.LOCATION }}" \
            -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        working-directory: ./infra/terraform
        run: terraform apply -auto-approve tfplan